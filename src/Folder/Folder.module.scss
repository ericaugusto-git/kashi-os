.folder {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  color: rgb(var(--font-color));
  background: rgb(var(--darker-color));
  transition: background-color var(--theme-transition-ms) linear;
  &.loading{
    pointer-events: none;
  }
}

.body {
  display: flex;
  // 48px is the height of the navigation bar
  height: calc(100% - 48px);
  menu{
    margin: 0;
    padding: 0 7px;
    display: flex;
    flex-direction: column;
    font-family: 'IBM Plex Mono', monospace;
    gap: 4px;
    li {
      list-style: none;
      a{
        color: rgb(var(--font-color));
        white-space: nowrap;
        display: flex;
        align-items: center;
        gap: 8px;
        .icon{
          background-color: rgb(var(--font-color));
          width: 16px;
          height: 16px;
      }
      }
    }
  }
}

.navigation {
  display: flex;
  align-items: center;
  padding-bottom: 8px;
  gap: 8px;
  border-bottom: 1px solid var(--border-color);
}

.navButton {
  padding: 4px 8px;
  background: none;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  color: rgb(var(--font-color));
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &:hover:not(:disabled) {
    color: rgb(var(--accent-color));
  }
}

.pathDisplay {
  flex: 1;
  border-radius: 4px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.gridWrapper{
  width: 100%;
  overflow: auto;
}

.fileGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  gap: 16px;
  overflow-y: auto;
  flex: 1;
  padding: 0 15px;
  height: fit-content;
  position: relative;
}

.folderEmpty{
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1;
  gap: 8px;
  flex-direction: column;
  .folderEmptyIcon{
    width: 16px;
    height: 16px;
  }
}

.fileItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: fit-content;
} 

.loader_wrapper{
  position: absolute;
  top: 50%;  /* position the top  edge of the element at the middle of the parent */
  left: 50%; /* position the left edge of the element at the middle of the parent */
  background-color: rgba(255, 255, 255, 0.027);
  width: 100%;
  pointer-events: none;
  height: 100%;
  display: flex;
  align-items: center;
  flex-direction: column;
  gap: 10px;
  justify-content: center;
  transform: translate(-50%, -50%); 
}

.loader {
  width: 120px;
  height: 22px;
  border-radius: 40px;
  color: rgb(var(--accent-color));
  border: 2px solid;
  position: relative;
}
.loader::before {
  content: "";
  position: absolute;
  margin: 2px;
  width: 25%;
  top: 0;
  bottom: 0;
  left: 0;
  border-radius: inherit;
  background: currentColor;
  animation: l3 1s infinite linear;
}
@keyframes l3 {
    50% {left:100%;transform: translateX(calc(-100% - 4px))}
}